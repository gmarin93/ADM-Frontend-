{"ast":null,"code":"var _jsxFileName = \"/home/sisagricola/Documents/Software/AdmTareas/mern/FrontEnd/src/context/tareas/tareaState.js\";\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport clienteAxios from '../../config/axios'; // import uuid from 'uuid/v4';\n\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types';\n\nconst TareaState = props => {\n  const initialState = {\n    // tareas:[\n    //     { nombre: \"Elegir plataforma\", id:1, estado: true,proyectoId:1 },\n    //     { nombre: \"Elegir Colores\", id:2, estado: false,proyectoId:2 },\n    //     { nombre: \"Elegir plataforma de pago\", id:3, estado: false,proyectoId:3 },\n    //     { nombre: \"Elegir hosting\", id:4, estado: true,proyectoId:4 },\n    //     { nombre: \"Elegir plataforma\", id:5, estado: true,proyectoId:1 },\n    //     { nombre: \"Elegir Colores\", id:6, estado: false,proyectoId:2 },\n    //     { nombre: \"Elegir plataforma de pago\", id:7, estado: false,proyectoId:3 },\n    //     { nombre: \"Elegir hosting\", id:8, estado: true,proyectoId:4 },\n    //     { nombre: \"Elegir plataforma\", id:9, estado: true,proyectoId:1 },\n    //     { nombre: \"Elegir Colores\", id:10, estado: false,proyectoId:2 },\n    //     { nombre: \"Elegir plataforma de pago\", id:11, estado: false,proyectoId:3 },\n    //     { nombre: \"Elegir hosting\", id:12, estado: true,proyectoId:4 },\n    //     { nombre: \"Elegir Colores\", id:13, estado: false,proyectoId:3 },\n    // ],\n    tareasproyecto: [],\n    errortarea: false,\n    tareaseleccionada: null\n  }; //Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n  const obtenerTareas = async proyecto => {\n    try {\n      const resultado = await clienteAxios.get(`/api/tareas`, {\n        params: {\n          proyecto\n        }\n      });\n      console.log(resultado);\n      dispatch({\n        type: TAREAS_PROYECTO,\n        payload: resultado.data.tareas\n      });\n    } catch (error) {}\n  }; // Agregar tarea al proyecto seleccionado\n\n\n  const agregarTarea = async tarea => {\n    // tarea.id=uuid();\n    try {\n      const resultado = await clienteAxios.post(`api/tareas`, tarea);\n      dispatch({\n        type: AGREGAR_TAREA,\n        payload: resultado.data.tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  };\n\n  const eliminarTarea = async (id, proyecto) => {\n    try {\n      await clienteAxios.delete(`api/tareas/${id}`, {\n        params: {\n          proyecto\n        }\n      });\n      dispatch({\n        type: ELIMINAR_TAREA,\n        payload: id\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // ///CAMBIA ESTADO DE TAREAS\n  // const cambiaEstadoTarea = tarea => {\n  //     dispatch({\n  //         type: ESTADO_TAREA,\n  //         payload: tarea\n  //     })\n  // }\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  };\n\n  const actualizarTarea = async tarea => {\n    try {\n      const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\n\n      if (resultado) {\n        console.log(resultado);\n        dispatch({\n          type: ACTUALIZAR_TAREA,\n          payload: resultado.data.tarea\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const limpiarTarea = () => {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TareaContext.Provider, {\n    value: {\n      // tareas:state.tareas,\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaseleccionada: state.tareaseleccionada,\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      // cambiaEstadoTarea,\n      guardarTareaActual,\n      actualizarTarea,\n      limpiarTarea\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TareaState;","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/AdmTareas/mern/FrontEnd/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","clienteAxios","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","TareaState","props","initialState","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","proyecto","resultado","get","params","console","log","type","payload","data","tareas","error","agregarTarea","tarea","post","validarTarea","eliminarTarea","id","delete","guardarTareaActual","actualizarTarea","put","_id","limpiarTarea","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport clienteAxios from '../../config/axios';\n\n// import uuid from 'uuid/v4';\nimport {\n    TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA\n} from '../../types';\n\nconst TareaState = props => {\n\n    const initialState = {\n        // tareas:[\n        //     { nombre: \"Elegir plataforma\", id:1, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:2, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:3, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:4, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir plataforma\", id:5, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:6, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:7, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:8, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir plataforma\", id:9, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:10, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:11, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:12, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir Colores\", id:13, estado: false,proyectoId:3 },\n        // ],\n        tareasproyecto: [],\n        errortarea: false,\n        tareaseleccionada: null\n    }\n\n    //Crear dispatch y state\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n    const obtenerTareas = async proyecto => {\n\n        try {\n\n            const resultado = await clienteAxios.get(`/api/tareas`, { params: { proyecto } });\n            console.log(resultado);\n\n            dispatch({\n                type: TAREAS_PROYECTO,\n                payload: resultado.data.tareas\n            })\n        } catch (error) {\n\n        }\n\n    }\n\n    // Agregar tarea al proyecto seleccionado\n    const agregarTarea = async tarea => {\n        // tarea.id=uuid();\n\n        try {\n\n            const resultado = await clienteAxios.post(`api/tareas`, tarea);\n\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload: resultado.data.tarea\n            });\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA\n        })\n    }\n\n    const eliminarTarea = async (id, proyecto) => {\n\n        try {\n\n            await clienteAxios.delete(`api/tareas/${id}`, { params: { proyecto } });\n\n            dispatch({\n                type: ELIMINAR_TAREA,\n                payload: id\n            })\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    // ///CAMBIA ESTADO DE TAREAS\n    // const cambiaEstadoTarea = tarea => {\n    //     dispatch({\n    //         type: ESTADO_TAREA,\n    //         payload: tarea\n    //     })\n    // }\n\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n\n    const actualizarTarea = async(tarea) => {\n\n        try {\n            \n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`,tarea);\n\n            if(resultado){\n\n                console.log(resultado);\n\n                dispatch({\n                    type: ACTUALIZAR_TAREA,\n                    payload: resultado.data.tarea\n                })\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n      \n    }\n\n    const limpiarTarea = () => {\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{\n                // tareas:state.tareas,\n                tareasproyecto: state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                obtenerTareas,\n                agregarTarea,\n                validarTarea,\n                eliminarTarea,\n                // cambiaEstadoTarea,\n                guardarTareaActual,\n                actualizarTarea,\n                limpiarTarea\n            }}>\n            {props.children}\n        </TareaContext.Provider>\n    )\n\n};\n\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}