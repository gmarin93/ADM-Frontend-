{"ast":null,"code":"var _jsxFileName = \"/home/gmarin/Software/MERN/mern/FrontEnd/src/context/proyectos/proyectoState.js\";\nimport React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer'; // import uuid from 'uuid/v4';\n\nimport clienteAxios from '../../config/axios';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, PROYECTO_ERROR, ELIMINAR_PROYECTO } from '../../types'; // El archivo dentro de types al llamarse index.js no necesita llamarse types/index.js, así como está funciona\n\nconst ProyectoState = props => {\n  // const proyectos = [\n  //     { id: 1, nombre: 'Tienda Virtual' },\n  //     { id: 2, nombre: 'Intranet' },\n  //     { id: 3, nombre: 'Diseño de sitio' },\n  //     { id: 4, nombre: 'MERN' }\n  // ]\n  const initialState = {\n    formulario: false,\n    proyectos: [],\n    errorformulario: false,\n    proyecto: null,\n    mensaje: null\n  };\n  const [state, dispatch] = useReducer(proyectoReducer, initialState);\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  };\n\n  const obtenerProyectos = async () => {\n    try {\n      const resultado = await clienteAxios.get(`api/proyectos`);\n      dispatch({\n        type: OBTENER_PROYECTOS,\n        payload: resultado.data.proyectos\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const agregarProyecto = async proyecto => {\n    // proyecto.id=uuid();\n    try {\n      const resultado = await clienteAxios.post('api/proyectos', proyecto);\n      dispatch({\n        type: AGREGAR_PROYECTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  };\n\n  const proyectoActual = id => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: id\n    });\n  };\n\n  const eliminarProyecto = async id => {\n    try {\n      await clienteAxios.delete(`/api/proyectos/1`);\n      dispatch({\n        type: ELIMINAR_PROYECTO,\n        payload: id\n      });\n    } catch (error) {\n      const alerta = {\n        msg: `Hubo un error`,\n        categoria: `alerta-error`\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // Es recomendable manejar los datos del state y luego las funciones en el value del context\n\n\n  return /*#__PURE__*/React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorformulario: state.errorformulario,\n      proyecto: state.proyecto,\n      mensaje: state.mensaje,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["/home/gmarin/Software/MERN/mern/FrontEnd/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","proyectoContext","proyectoReducer","clienteAxios","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","PROYECTO_ERROR","ELIMINAR_PROYECTO","ProyectoState","props","initialState","formulario","proyectos","errorformulario","proyecto","mensaje","state","dispatch","mostrarFormulario","type","obtenerProyectos","resultado","get","payload","data","error","console","log","agregarProyecto","post","mostrarError","proyectoActual","id","eliminarProyecto","delete","alerta","msg","categoria","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\n// import uuid from 'uuid/v4';\nimport clienteAxios from '../../config/axios';\n\nimport {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    PROYECTO_ERROR,\n    ELIMINAR_PROYECTO\n} from '../../types';\n\n// El archivo dentro de types al llamarse index.js no necesita llamarse types/index.js, así como está funciona\n\nconst ProyectoState = props => {\n\n    // const proyectos = [\n    //     { id: 1, nombre: 'Tienda Virtual' },\n    //     { id: 2, nombre: 'Intranet' },\n    //     { id: 3, nombre: 'Diseño de sitio' },\n    //     { id: 4, nombre: 'MERN' }\n    // ]\n\n    const initialState = {\n        formulario: false,\n        proyectos: [],\n        errorformulario: false,\n        proyecto: null,\n        mensaje:null\n    }\n\n    const [state, dispatch] = useReducer(proyectoReducer, initialState);\n\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    const obtenerProyectos = async () => {\n\n        try {\n            \n            const resultado = await clienteAxios.get(`api/proyectos`);\n\n            dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n            });\n\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const agregarProyecto = async proyecto => {\n        // proyecto.id=uuid();\n\n        try {\n\n            const resultado = await clienteAxios.post('api/proyectos', proyecto);\n\n            dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: resultado.data\n            })\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n    const proyectoActual = id => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: id\n        })\n    }\n\n    const eliminarProyecto = async id => {\n\n        try {\n\n            await clienteAxios.delete(`/api/proyectos/1`);\n            \n            dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload: id\n            });\n\n        } catch (error) {\n\n            const alerta = {\n                msg: `Hubo un error`,\n                categoria: `alerta-error`\n            };\n            \n            dispatch({\n                type:PROYECTO_ERROR,\n                payload:alerta\n            })\n        }\n\n    }\n\n    // Es recomendable manejar los datos del state y luego las funciones en el value del context\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorformulario: state.errorformulario,\n                proyecto: state.proyecto,\n                mensaje: state.mensaje,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    );\n};\n\n\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}