{"ast":null,"code":"var _jsxFileName = \"/home/gmarin/Software/MERN/mern/FrontEnd/src/context/tareas/tareaState.js\";\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer'; // import uuid from 'uuid/v4';\n\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, ESTADO_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types';\n\nconst TareaState = props => {\n  const initialState = {\n    // tareas:[\n    //     { nombre: \"Elegir plataforma\", id:1, estado: true,proyectoId:1 },\n    //     { nombre: \"Elegir Colores\", id:2, estado: false,proyectoId:2 },\n    //     { nombre: \"Elegir plataforma de pago\", id:3, estado: false,proyectoId:3 },\n    //     { nombre: \"Elegir hosting\", id:4, estado: true,proyectoId:4 },\n    //     { nombre: \"Elegir plataforma\", id:5, estado: true,proyectoId:1 },\n    //     { nombre: \"Elegir Colores\", id:6, estado: false,proyectoId:2 },\n    //     { nombre: \"Elegir plataforma de pago\", id:7, estado: false,proyectoId:3 },\n    //     { nombre: \"Elegir hosting\", id:8, estado: true,proyectoId:4 },\n    //     { nombre: \"Elegir plataforma\", id:9, estado: true,proyectoId:1 },\n    //     { nombre: \"Elegir Colores\", id:10, estado: false,proyectoId:2 },\n    //     { nombre: \"Elegir plataforma de pago\", id:11, estado: false,proyectoId:3 },\n    //     { nombre: \"Elegir hosting\", id:12, estado: true,proyectoId:4 },\n    //     { nombre: \"Elegir Colores\", id:13, estado: false,proyectoId:3 },\n    // ],\n    tareasproyecto: null,\n    errortarea: false,\n    tareaseleccionada: null\n  }; //Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n  const obtenerTareas = proyectoId => {\n    dispatch({\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    });\n  }; // Agregar tarea al proyecto seleccionado\n\n\n  const agregarTarea = tarea => {\n    // tarea.id=uuid();\n    try {} catch (error) {}\n\n    dispatch({\n      type: AGREGAR_TAREA,\n      payload: tarea\n    });\n  };\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  };\n\n  const eliminarTarea = id => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: id\n    });\n  }; ///CAMBIA ESTADO DE TAREAS\n\n\n  const cambiaEstadoTarea = tarea => {\n    dispatch({\n      type: ESTADO_TAREA,\n      payload: tarea\n    });\n  };\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  };\n\n  const actualizarTarea = tarea => {\n    dispatch({\n      type: ACTUALIZAR_TAREA,\n      payload: tarea\n    });\n  };\n\n  const limpiarTarea = () => {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TareaContext.Provider, {\n    value: {\n      // tareas:state.tareas,\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaseleccionada: state.tareaseleccionada,\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      cambiaEstadoTarea,\n      guardarTareaActual,\n      actualizarTarea,\n      limpiarTarea\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TareaState;","map":{"version":3,"sources":["/home/gmarin/Software/MERN/mern/FrontEnd/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","ESTADO_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","TareaState","props","initialState","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","proyectoId","type","payload","agregarTarea","tarea","error","validarTarea","eliminarTarea","id","cambiaEstadoTarea","guardarTareaActual","actualizarTarea","limpiarTarea","children"],"mappings":"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","sourcesContent":["import React,{useReducer} from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\n// import uuid from 'uuid/v4';\nimport {TAREAS_PROYECTO,AGREGAR_TAREA,VALIDAR_TAREA,ELIMINAR_TAREA,ESTADO_TAREA,TAREA_ACTUAL,ACTUALIZAR_TAREA,LIMPIAR_TAREA\n} from '../../types';\n\nconst TareaState = props => {\n    \n    const initialState={\n        // tareas:[\n        //     { nombre: \"Elegir plataforma\", id:1, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:2, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:3, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:4, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir plataforma\", id:5, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:6, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:7, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:8, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir plataforma\", id:9, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:10, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:11, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:12, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir Colores\", id:13, estado: false,proyectoId:3 },\n        // ],\n        tareasproyecto:null,\n        errortarea:false,\n        tareaseleccionada:null\n    }\n\n    //Crear dispatch y state\n    const [state,dispatch]= useReducer(TareaReducer,initialState);\n\n    const obtenerTareas=proyectoId=>{\n        dispatch({\n            type:TAREAS_PROYECTO,\n            payload:proyectoId\n        })\n    }\n\n    // Agregar tarea al proyecto seleccionado\n    const agregarTarea=tarea=>{\n        // tarea.id=uuid();\n\n        try {\n            \n        } catch (error) {\n            \n        }\n\n        dispatch({\n            type:AGREGAR_TAREA,\n            payload:tarea\n        })\n    }\n\n    const validarTarea=()=>{\n        dispatch({\n            type:VALIDAR_TAREA\n        })\n    }\n\n    const eliminarTarea=id=>{\n        dispatch({\n            type:ELIMINAR_TAREA,\n            payload:id\n        })\n    }\n\n    ///CAMBIA ESTADO DE TAREAS\n    const cambiaEstadoTarea=tarea=>{\n        dispatch({\n            type:ESTADO_TAREA,\n            payload:tarea\n        })\n    }\n\n    const guardarTareaActual=tarea=>{\n        dispatch({\n            type:TAREA_ACTUAL,\n            payload:tarea\n        })\n    }\n\n    const actualizarTarea=(tarea)=>{\n        dispatch({\n            type:ACTUALIZAR_TAREA,\n            payload:tarea\n        })\n    }\n\n    const limpiarTarea=()=>{\n        dispatch({\n            type:LIMPIAR_TAREA\n        })\n    }\n\n    return(\n        <TareaContext.Provider\n        value={{\n            // tareas:state.tareas,\n            tareasproyecto:state.tareasproyecto,\n            errortarea:state.errortarea,\n            tareaseleccionada:state.tareaseleccionada,\n            obtenerTareas,\n            agregarTarea,\n            validarTarea,\n            eliminarTarea,\n            cambiaEstadoTarea,\n            guardarTareaActual,\n            actualizarTarea,\n            limpiarTarea\n        }}>\n            {props.children}\n        </TareaContext.Provider>\n    ) \n\n};\n\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}