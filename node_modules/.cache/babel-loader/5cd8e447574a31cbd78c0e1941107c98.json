{"ast":null,"code":"var _jsxFileName = \"/home/gmarin/Software/MERN/mern/FrontEnd/src/context/tareas/tareaState.js\";\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport clienteAxios from '../../config/axios'; // import uuid from 'uuid/v4';\n\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, ESTADO_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types';\n\nconst TareaState = props => {\n  const initialState = {\n    // tareas:[\n    //     { nombre: \"Elegir plataforma\", id:1, estado: true,proyectoId:1 },\n    //     { nombre: \"Elegir Colores\", id:2, estado: false,proyectoId:2 },\n    //     { nombre: \"Elegir plataforma de pago\", id:3, estado: false,proyectoId:3 },\n    //     { nombre: \"Elegir hosting\", id:4, estado: true,proyectoId:4 },\n    //     { nombre: \"Elegir plataforma\", id:5, estado: true,proyectoId:1 },\n    //     { nombre: \"Elegir Colores\", id:6, estado: false,proyectoId:2 },\n    //     { nombre: \"Elegir plataforma de pago\", id:7, estado: false,proyectoId:3 },\n    //     { nombre: \"Elegir hosting\", id:8, estado: true,proyectoId:4 },\n    //     { nombre: \"Elegir plataforma\", id:9, estado: true,proyectoId:1 },\n    //     { nombre: \"Elegir Colores\", id:10, estado: false,proyectoId:2 },\n    //     { nombre: \"Elegir plataforma de pago\", id:11, estado: false,proyectoId:3 },\n    //     { nombre: \"Elegir hosting\", id:12, estado: true,proyectoId:4 },\n    //     { nombre: \"Elegir Colores\", id:13, estado: false,proyectoId:3 },\n    // ],\n    tareasproyecto: [],\n    errortarea: false,\n    tareaseleccionada: null\n  }; //Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n  const obtenerTareas = async proyecto => {\n    try {\n      const resultado = await clienteAxios.get(`/api/tareas`, {\n        params: {\n          proyecto\n        }\n      });\n      dispatch({\n        type: TAREAS_PROYECTO,\n        payload: proyecto\n      });\n    } catch (error) {}\n  }; // Agregar tarea al proyecto seleccionado\n\n\n  const agregarTarea = async tarea => {\n    // tarea.id=uuid();\n    try {\n      const resultado = await clienteAxios.post(`api/tareas`, tarea);\n      console.log(resultado);\n      dispatch({\n        type: AGREGAR_TAREA,\n        payload: tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  };\n\n  const eliminarTarea = id => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: id\n    });\n  }; ///CAMBIA ESTADO DE TAREAS\n\n\n  const cambiaEstadoTarea = tarea => {\n    dispatch({\n      type: ESTADO_TAREA,\n      payload: tarea\n    });\n  };\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  };\n\n  const actualizarTarea = tarea => {\n    dispatch({\n      type: ACTUALIZAR_TAREA,\n      payload: tarea\n    });\n  };\n\n  const limpiarTarea = () => {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TareaContext.Provider, {\n    value: {\n      // tareas:state.tareas,\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaseleccionada: state.tareaseleccionada,\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      cambiaEstadoTarea,\n      guardarTareaActual,\n      actualizarTarea,\n      limpiarTarea\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TareaState;","map":{"version":3,"sources":["/home/gmarin/Software/MERN/mern/FrontEnd/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","clienteAxios","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","ESTADO_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","TareaState","props","initialState","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","proyecto","resultado","get","params","type","payload","error","agregarTarea","tarea","post","console","log","validarTarea","eliminarTarea","id","cambiaEstadoTarea","guardarTareaActual","actualizarTarea","limpiarTarea","children"],"mappings":"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","sourcesContent":["import React,{useReducer} from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport clienteAxios from '../../config/axios';\n\n// import uuid from 'uuid/v4';\nimport {TAREAS_PROYECTO,AGREGAR_TAREA,VALIDAR_TAREA,ELIMINAR_TAREA,ESTADO_TAREA,TAREA_ACTUAL,ACTUALIZAR_TAREA,LIMPIAR_TAREA\n} from '../../types';\n\nconst TareaState = props => {\n    \n    const initialState={\n        // tareas:[\n        //     { nombre: \"Elegir plataforma\", id:1, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:2, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:3, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:4, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir plataforma\", id:5, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:6, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:7, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:8, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir plataforma\", id:9, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:10, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:11, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:12, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir Colores\", id:13, estado: false,proyectoId:3 },\n        // ],\n        tareasproyecto:[],\n        errortarea:false,\n        tareaseleccionada:null\n    }\n\n    //Crear dispatch y state\n    const [state,dispatch]= useReducer(TareaReducer,initialState);\n\n    const obtenerTareas= async proyecto=>{\n\n        try {\n\n            const resultado= await clienteAxios.get(`/api/tareas`,{params: {proyecto}});\n            \n            dispatch({\n                type:TAREAS_PROYECTO,\n                payload:proyecto\n            })\n        } catch (error) {\n            \n        }\n\n    }\n\n    // Agregar tarea al proyecto seleccionado\n    const agregarTarea=async tarea=>{\n        // tarea.id=uuid();\n\n        try {\n\n            const resultado = await clienteAxios.post(`api/tareas`,tarea);\n\n            console.log(resultado);\n\n            dispatch({\n                type:AGREGAR_TAREA,\n                payload:tarea\n            });\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    const validarTarea=()=>{\n        dispatch({\n            type:VALIDAR_TAREA\n        })\n    }\n\n    const eliminarTarea=id=>{\n        dispatch({\n            type:ELIMINAR_TAREA,\n            payload:id\n        })\n    }\n\n    ///CAMBIA ESTADO DE TAREAS\n    const cambiaEstadoTarea=tarea=>{\n        dispatch({\n            type:ESTADO_TAREA,\n            payload:tarea\n        })\n    }\n\n    const guardarTareaActual=tarea=>{\n        dispatch({\n            type:TAREA_ACTUAL,\n            payload:tarea\n        })\n    }\n\n    const actualizarTarea=(tarea)=>{\n        dispatch({\n            type:ACTUALIZAR_TAREA,\n            payload:tarea\n        })\n    }\n\n    const limpiarTarea=()=>{\n        dispatch({\n            type:LIMPIAR_TAREA\n        })\n    }\n\n    return(\n        <TareaContext.Provider\n        value={{\n            // tareas:state.tareas,\n            tareasproyecto:state.tareasproyecto,\n            errortarea:state.errortarea,\n            tareaseleccionada:state.tareaseleccionada,\n            obtenerTareas,\n            agregarTarea,\n            validarTarea,\n            eliminarTarea,\n            cambiaEstadoTarea,\n            guardarTareaActual,\n            actualizarTarea,\n            limpiarTarea\n        }}>\n            {props.children}\n        </TareaContext.Provider>\n    ) \n\n};\n\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}