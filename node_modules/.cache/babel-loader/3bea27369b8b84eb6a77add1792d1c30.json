{"ast":null,"code":"var _jsxFileName = \"/home/sisagricola/Documents/Software/AdmTareas/mern/FrontEnd/src/context/autentication/authState.js\";\nimport React, { useReducer } from 'react';\nimport AuthReducer from './authReducer';\nimport AuthContext from './authContext';\nimport clienteAxios from '../../config/axios';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from '../../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem(`token`),\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  const registrarUsuario = async datos => {\n    try {\n      const respuesta = await clienteAxios.post(`/api/usuarios`, datos);\n      console.log(respuesta);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      });\n    } catch (error) {\n      console.log(error.response.data.msg);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: `alerta-error`\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  const usuarioAutenticado = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {}\n\n    try {} catch (error) {\n      console.log(error);\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      registrarUsuario\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/AdmTareas/mern/FrontEnd/src/context/autentication/authState.js"],"names":["React","useReducer","AuthReducer","AuthContext","clienteAxios","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","state","dispatch","registrarUsuario","datos","respuesta","post","console","log","type","payload","data","error","response","msg","alerta","categoria","usuarioAutenticado","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,EAA2CC,eAA3C,EAA4DC,aAA5D,EAA2EC,WAA3E,EAAwFC,aAAxF,QAA6G,aAA7G;;AAGA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAEvB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAsB,OAAtB,CADU;AAEjBC,IAAAA,WAAW,EAAE,IAFI;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,OAAO,EAAC;AAJS,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACC,WAAD,EAAcW,YAAd,CAApC;;AAEA,QAAMS,gBAAgB,GAAG,MAAMC,KAAN,IAAc;AAEnC,QAAI;AAEA,YAAMC,SAAS,GAAG,MAAMpB,YAAY,CAACqB,IAAb,CAAmB,eAAnB,EAAkCF,KAAlC,CAAxB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEAH,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEvB,gBADD;AAELwB,QAAAA,OAAO,EAACL,SAAS,CAACM;AAFb,OAAD,CAAR;AAKH,KAVD,CAUE,OAAOC,KAAP,EAAc;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,QAAN,CAAeF,IAAf,CAAoBG,GAAhC;AAEA,YAAMC,MAAM,GAAC;AACTD,QAAAA,GAAG,EAACF,KAAK,CAACC,QAAN,CAAeF,IAAf,CAAoBG,GADf;AAETE,QAAAA,SAAS,EAAG;AAFH,OAAb;AAKAd,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEtB,cADD;AAELuB,QAAAA,OAAO,EAACK;AAFH,OAAD,CAAR;AAIH;AACJ,GAzBD;;AA2BA,QAAME,kBAAkB,GAAG,YAAY;AAEnC,UAAMtB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAGF,KAAH,EAAS,CAGR;;AAED,QAAI,CAEH,CAFD,CAEE,OAAOiB,KAAP,EAAc;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAV,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEnB;AADD,OAAD,CAAR;AAGH;AACJ,GAjBD;;AAmBA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAEI,IAAA,KAAK,EAAE;AACHK,MAAAA,KAAK,EAAEM,KAAK,CAACN,KADV;AAEHG,MAAAA,WAAW,EAAEG,KAAK,CAACH,WAFhB;AAGHC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAHZ;AAIHC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJZ;AAKHG,MAAAA;AALG,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUKV,KAAK,CAACyB,QAVX,CADJ;AAcH,CAvED;;AAyEA,eAAe1B,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport AuthReducer from './authReducer';\nimport AuthContext from './authContext';\nimport clienteAxios from '../../config/axios';\n\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from '../../types'\n\n\nconst AuthState = props => {\n\n    const initialState = {\n        token: localStorage.getItem(`token`),\n        autenticado: null,\n        usuario: null,\n        mensaje:null\n    };\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    const registrarUsuario = async datos =>{\n\n        try {\n\n            const respuesta = await clienteAxios.post(`/api/usuarios`,datos);\n            console.log(respuesta);\n\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload:respuesta.data\n            })\n            \n        } catch (error) {\n            console.log(error.response.data.msg);\n\n            const alerta={\n                msg:error.response.data.msg,\n                categoria: `alerta-error`   \n            }\n\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload:alerta\n            });\n        }\n    }\n\n    const usuarioAutenticado = async () => {\n\n        const token = localStorage.getItem('token');\n\n        if(token){\n\n\n        }\n\n        try {\n            \n        } catch (error) {\n            console.log(error);\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n\n    return (\n        <AuthContext.Provider\n\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                registrarUsuario\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}