{"ast":null,"code":"var _jsxFileName = \"/home/gmarin/Software/MERN/mern/FrontEnd/src/context/proyectos/proyectoState.js\";\nimport React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer'; // import uuid from 'uuid/v4';\n\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO } from '../../types'; // El archivo dentro de types al llamarse index.js no necesita llamarse types/index.js, así como está funciona\n\nconst ProyectoState = props => {\n  const proyectos = [{\n    id: 1,\n    nombre: 'Tienda Virtual'\n  }, {\n    id: 2,\n    nombre: 'Intranet'\n  }, {\n    id: 3,\n    nombre: 'Diseño de sitio'\n  }, {\n    id: 4,\n    nombre: 'MERN'\n  }];\n  const initialState = {\n    formulario: false,\n    proyectos: [],\n    errorformulario: false,\n    proyecto: null\n  };\n  const [state, dispatch] = useReducer(proyectoReducer, initialState);\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  };\n\n  const obtenerProyectos = () => {\n    dispatch({\n      type: OBTENER_PROYECTOS,\n      payload: proyectos\n    });\n  };\n\n  const agregarProyecto = async proyecto => {\n    // proyecto.id=uuid();\n    // dispatch({\n    //     type:AGREGAR_PROYECTO,\n    //     payload:proyecto\n    // })\n    try {} catch (error) {\n      console.log(error);\n    }\n  };\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  };\n\n  const proyectoActual = id => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: id\n    });\n  };\n\n  const eliminarProyecto = id => {\n    dispatch({\n      type: ELIMINAR_PROYECTO,\n      payload: id\n    });\n  }; // Es recomendable manejar los datos del state y luego las funciones en el value del context\n\n\n  return /*#__PURE__*/React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorformulario: state.errorformulario,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["/home/gmarin/Software/MERN/mern/FrontEnd/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","ProyectoState","props","proyectos","id","nombre","initialState","formulario","errorformulario","proyecto","state","dispatch","mostrarFormulario","type","obtenerProyectos","payload","agregarProyecto","error","console","log","mostrarError","proyectoActual","eliminarProyecto","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CACA;;AACA,SACIC,mBADJ,EAEIC,iBAFJ,EAGIC,gBAHJ,EAIIC,kBAJJ,EAKIC,eALJ,EAMIC,iBANJ,QAOO,aAPP,C,CASA;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAE3B,QAAMC,SAAS,GAAC,CACZ;AAAEC,IAAAA,EAAE,EAAC,CAAL;AAAQC,IAAAA,MAAM,EAAE;AAAhB,GADY,EAEZ;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,MAAM,EAAE;AAAf,GAFY,EAGZ;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,MAAM,EAAE;AAAf,GAHY,EAIZ;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,MAAM,EAAE;AAAf,GAJY,CAAhB;AAMA,QAAMC,YAAY,GAAC;AACfC,IAAAA,UAAU,EAAC,KADI;AAEfJ,IAAAA,SAAS,EAAC,EAFK;AAGfK,IAAAA,eAAe,EAAC,KAHD;AAIfC,IAAAA,QAAQ,EAAC;AAJM,GAAnB;AAOA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBnB,UAAU,CAACE,eAAD,EAAiBY,YAAjB,CAAjC;;AAEA,QAAMM,iBAAiB,GAAE,MAAK;AAC1BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAClB;AADA,KAAD,CAAR;AAGH,GAJD;;AAMA,QAAMmB,gBAAgB,GAAC,MAAI;AACvBH,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACjB,iBADA;AAELmB,MAAAA,OAAO,EAACZ;AAFH,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMa,eAAe,GAAE,MAAMP,QAAN,IAAgB;AACnC;AAEA;AACA;AACA;AACA;AAGA,QAAI,CAIH,CAJD,CAIE,OAAOQ,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,GAjBD;;AAmBA,QAAMG,YAAY,GAAC,MAAI;AACnBT,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACf;AADA,KAAD,CAAR;AAGH,GAJD;;AAMA,QAAMuB,cAAc,GAACjB,EAAE,IAAE;AACrBO,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACd,eADA;AAELgB,MAAAA,OAAO,EAACX;AAFH,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMkB,gBAAgB,GAAClB,EAAE,IAAE;AACvBO,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACb,iBADA;AAELe,MAAAA,OAAO,EAACX;AAFH,KAAD,CAAR;AAIH,GALD,CA9D2B,CAqE3B;;;AACA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AACA,IAAA,KAAK,EAAE;AACHD,MAAAA,SAAS,EAACO,KAAK,CAACP,SADb;AAEHI,MAAAA,UAAU,EAACG,KAAK,CAACH,UAFd;AAGHC,MAAAA,eAAe,EAACE,KAAK,CAACF,eAHnB;AAIHC,MAAAA,QAAQ,EAACC,KAAK,CAACD,QAJZ;AAKHG,MAAAA,iBALG;AAMHE,MAAAA,gBANG;AAOHE,MAAAA,eAPG;AAQHI,MAAAA,YARG;AASHC,MAAAA,cATG;AAUHC,MAAAA;AAVG,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcKpB,KAAK,CAACqB,QAdX,CADJ;AAkBH,CAxFD;;AA2FA,eAAetB,aAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\n// import uuid from 'uuid/v4';\nimport {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from '../../types';\n\n// El archivo dentro de types al llamarse index.js no necesita llamarse types/index.js, así como está funciona\n\nconst ProyectoState = props => {\n    \n    const proyectos=[\n        { id:1, nombre: 'Tienda Virtual' },\n        {id:2, nombre: 'Intranet' },\n        {id:3, nombre: 'Diseño de sitio' },\n        {id:4, nombre: 'MERN' }\n    ]\n    const initialState={\n        formulario:false,\n        proyectos:[],\n        errorformulario:false,\n        proyecto:null\n    }\n\n    const [state,dispatch]=useReducer(proyectoReducer,initialState);\n\n    const mostrarFormulario= () =>{\n        dispatch({\n            type:FORMULARIO_PROYECTO\n        })\n    }\n\n    const obtenerProyectos=()=>{\n        dispatch({\n            type:OBTENER_PROYECTOS,\n            payload:proyectos\n        })\n    }\n\n    const agregarProyecto= async proyecto=>{\n        // proyecto.id=uuid();\n        \n        // dispatch({\n        //     type:AGREGAR_PROYECTO,\n        //     payload:proyecto\n        // })\n\n\n        try {\n            \n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    const mostrarError=()=>{\n        dispatch({\n            type:VALIDAR_FORMULARIO\n        })\n    }\n\n    const proyectoActual=id=>{\n        dispatch({\n            type:PROYECTO_ACTUAL,\n            payload:id\n        })\n    }\n\n    const eliminarProyecto=id=>{\n        dispatch({\n            type:ELIMINAR_PROYECTO,\n            payload:id\n        })\n    }\n\n    // Es recomendable manejar los datos del state y luego las funciones en el value del context\n    return (\n        <proyectoContext.Provider\n        value={{\n            proyectos:state.proyectos,\n            formulario:state.formulario,\n            errorformulario:state.errorformulario,\n            proyecto:state.proyecto,\n            mostrarFormulario,\n            obtenerProyectos,\n            agregarProyecto,\n            mostrarError,\n            proyectoActual,\n            eliminarProyecto\n        }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    );\n};\n\n\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}