{"ast":null,"code":"var _jsxFileName = \"/home/gmarin/Software/MERN/mern/src/context/tareas/tareaState.js\";\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport uuid from 'uuid/v4';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, ESTADO_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types';\n\nconst TareaState = props => {\n  const initialState = {\n    tareas: [{\n      nombre: \"Elegir plataforma\",\n      id: 1,\n      estado: true,\n      proyectoId: 1\n    }, {\n      nombre: \"Elegir Colores\",\n      id: 2,\n      estado: false,\n      proyectoId: 2\n    }, {\n      nombre: \"Elegir plataforma de pago\",\n      id: 3,\n      estado: false,\n      proyectoId: 3\n    }, {\n      nombre: \"Elegir hosting\",\n      id: 4,\n      estado: true,\n      proyectoId: 4\n    }, {\n      nombre: \"Elegir plataforma\",\n      id: 5,\n      estado: true,\n      proyectoId: 1\n    }, {\n      nombre: \"Elegir Colores\",\n      id: 6,\n      estado: false,\n      proyectoId: 2\n    }, {\n      nombre: \"Elegir plataforma de pago\",\n      id: 7,\n      estado: false,\n      proyectoId: 3\n    }, {\n      nombre: \"Elegir hosting\",\n      id: 8,\n      estado: true,\n      proyectoId: 4\n    }, {\n      nombre: \"Elegir plataforma\",\n      id: 9,\n      estado: true,\n      proyectoId: 1\n    }, {\n      nombre: \"Elegir Colores\",\n      id: 10,\n      estado: false,\n      proyectoId: 2\n    }, {\n      nombre: \"Elegir plataforma de pago\",\n      id: 11,\n      estado: false,\n      proyectoId: 3\n    }, {\n      nombre: \"Elegir hosting\",\n      id: 12,\n      estado: true,\n      proyectoId: 4\n    }, {\n      nombre: \"Elegir Colores\",\n      id: 13,\n      estado: false,\n      proyectoId: 3\n    }],\n    tareasproyecto: null,\n    errortarea: false,\n    tareaseleccionada: null\n  }; //Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n  const obtenerTareas = proyectoId => {\n    dispatch({\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    });\n  }; // Agregar tarea al proyecto seleccionado\n\n\n  const agregarTarea = tarea => {\n    tarea.id = uuid();\n    dispatch({\n      type: AGREGAR_TAREA,\n      payload: tarea\n    });\n  };\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  };\n\n  const eliminarTarea = id => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: id\n    });\n  }; ///CAMBIA ESTADO DE TAREAS\n\n\n  const cambiaEstadoTarea = tarea => {\n    dispatch({\n      type: ESTADO_TAREA,\n      payload: tarea\n    });\n  };\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  };\n\n  const actualizarTarea = tarea => {\n    dispatch({\n      type: ACTUALIZAR_TAREA,\n      payload: tarea\n    });\n  };\n\n  const limpiarTarea = () => {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TareaContext.Provider, {\n    value: {\n      tareas: state.tareas,\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaseleccionada: state.tareaseleccionada,\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      cambiaEstadoTarea,\n      guardarTareaActual,\n      actualizarTarea,\n      limpiarTarea\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TareaState;","map":{"version":3,"sources":["/home/gmarin/Software/MERN/mern/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","uuid","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","ESTADO_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","TareaState","props","initialState","tareas","nombre","id","estado","proyectoId","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","type","payload","agregarTarea","tarea","validarTarea","eliminarTarea","cambiaEstadoTarea","guardarTareaActual","actualizarTarea","limpiarTarea","children"],"mappings":"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","sourcesContent":["import React,{useReducer} from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport uuid from 'uuid/v4';\n\nimport {TAREAS_PROYECTO,AGREGAR_TAREA,VALIDAR_TAREA,ELIMINAR_TAREA,ESTADO_TAREA,TAREA_ACTUAL,ACTUALIZAR_TAREA,LIMPIAR_TAREA\n} from '../../types';\n\nconst TareaState = props => {\n    \n    const initialState={\n        tareas:[\n            { nombre: \"Elegir plataforma\", id:1, estado: true,proyectoId:1 },\n            { nombre: \"Elegir Colores\", id:2, estado: false,proyectoId:2 },\n            { nombre: \"Elegir plataforma de pago\", id:3, estado: false,proyectoId:3 },\n            { nombre: \"Elegir hosting\", id:4, estado: true,proyectoId:4 },\n            { nombre: \"Elegir plataforma\", id:5, estado: true,proyectoId:1 },\n            { nombre: \"Elegir Colores\", id:6, estado: false,proyectoId:2 },\n            { nombre: \"Elegir plataforma de pago\", id:7, estado: false,proyectoId:3 },\n            { nombre: \"Elegir hosting\", id:8, estado: true,proyectoId:4 },\n            { nombre: \"Elegir plataforma\", id:9, estado: true,proyectoId:1 },\n            { nombre: \"Elegir Colores\", id:10, estado: false,proyectoId:2 },\n            { nombre: \"Elegir plataforma de pago\", id:11, estado: false,proyectoId:3 },\n            { nombre: \"Elegir hosting\", id:12, estado: true,proyectoId:4 },\n            { nombre: \"Elegir Colores\", id:13, estado: false,proyectoId:3 },\n        ],\n        tareasproyecto:null,\n        errortarea:false,\n        tareaseleccionada:null\n    }\n\n    //Crear dispatch y state\n    const [state,dispatch]= useReducer(TareaReducer,initialState);\n\n    const obtenerTareas=proyectoId=>{\n        dispatch({\n            type:TAREAS_PROYECTO,\n            payload:proyectoId\n        })\n    }\n\n    // Agregar tarea al proyecto seleccionado\n    const agregarTarea=tarea=>{\n        tarea.id=uuid();\n        dispatch({\n            type:AGREGAR_TAREA,\n            payload:tarea\n        })\n    }\n\n    const validarTarea=()=>{\n        dispatch({\n            type:VALIDAR_TAREA\n        })\n    }\n\n    const eliminarTarea=id=>{\n        dispatch({\n            type:ELIMINAR_TAREA,\n            payload:id\n        })\n    }\n\n    ///CAMBIA ESTADO DE TAREAS\n    const cambiaEstadoTarea=tarea=>{\n        dispatch({\n            type:ESTADO_TAREA,\n            payload:tarea\n        })\n    }\n\n    const guardarTareaActual=tarea=>{\n        dispatch({\n            type:TAREA_ACTUAL,\n            payload:tarea\n        })\n    }\n\n    const actualizarTarea=(tarea)=>{\n        dispatch({\n            type:ACTUALIZAR_TAREA,\n            payload:tarea\n        })\n    }\n\n    const limpiarTarea=()=>{\n        dispatch({\n            type:LIMPIAR_TAREA\n        })\n    }\n\n    return(\n        <TareaContext.Provider\n        value={{\n            tareas:state.tareas,\n            tareasproyecto:state.tareasproyecto,\n            errortarea:state.errortarea,\n            tareaseleccionada:state.tareaseleccionada,\n            obtenerTareas,\n            agregarTarea,\n            validarTarea,\n            eliminarTarea,\n            cambiaEstadoTarea,\n            guardarTareaActual,\n            actualizarTarea,\n            limpiarTarea\n        }}>\n            {props.children}\n        </TareaContext.Provider>\n    ) \n\n};\n\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}