{"ast":null,"code":"import _regeneratorRuntime from\"/home/sisagricola/Documents/Software/AdmTareas/mern/FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/sisagricola/Documents/Software/AdmTareas/mern/FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/sisagricola/Documents/Software/AdmTareas/mern/FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import TareaContext from'./tareaContext';import TareaReducer from'./tareaReducer';import clienteAxios from'../../config/axios';// import uuid from 'uuid/v4';\nimport{TAREAS_PROYECTO,AGREGAR_TAREA,VALIDAR_TAREA,ELIMINAR_TAREA,TAREA_ACTUAL,ACTUALIZAR_TAREA,LIMPIAR_TAREA}from'../../types';var TareaState=function TareaState(props){var initialState={// tareas:[\n//     { nombre: \"Elegir plataforma\", id:1, estado: true,proyectoId:1 },\n//     { nombre: \"Elegir Colores\", id:2, estado: false,proyectoId:2 },\n//     { nombre: \"Elegir plataforma de pago\", id:3, estado: false,proyectoId:3 },\n//     { nombre: \"Elegir hosting\", id:4, estado: true,proyectoId:4 },\n//     { nombre: \"Elegir plataforma\", id:5, estado: true,proyectoId:1 },\n//     { nombre: \"Elegir Colores\", id:6, estado: false,proyectoId:2 },\n//     { nombre: \"Elegir plataforma de pago\", id:7, estado: false,proyectoId:3 },\n//     { nombre: \"Elegir hosting\", id:8, estado: true,proyectoId:4 },\n//     { nombre: \"Elegir plataforma\", id:9, estado: true,proyectoId:1 },\n//     { nombre: \"Elegir Colores\", id:10, estado: false,proyectoId:2 },\n//     { nombre: \"Elegir plataforma de pago\", id:11, estado: false,proyectoId:3 },\n//     { nombre: \"Elegir hosting\", id:12, estado: true,proyectoId:4 },\n//     { nombre: \"Elegir Colores\", id:13, estado: false,proyectoId:3 },\n// ],\ntareasproyecto:[],errortarea:false,tareaseleccionada:null};//Crear dispatch y state\nvar _useReducer=useReducer(TareaReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var obtenerTareas=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(proyecto){var array_tareas,resultado;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:array_tareas=[];_context.prev=1;_context.next=4;return clienteAxios.get(\"/api/tareas\",{params:{proyecto:proyecto}});case 4:resultado=_context.sent;if(resultado){resultado.data.tareas.map(function(e){if(e!=undefined){array_tareas.push(e);}});}dispatch({type:TAREAS_PROYECTO,payload:array_tareas});_context.next=11;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function obtenerTareas(_x){return _ref.apply(this,arguments);};}();// Agregar tarea al proyecto seleccionado\nvar agregarTarea=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tarea){var resultado;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return clienteAxios.post(\"api/tareas\",tarea);case 3:resultado=_context2.sent;dispatch({type:AGREGAR_TAREA,payload:resultado.data.tarea});_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function agregarTarea(_x2){return _ref2.apply(this,arguments);};}();var validarTarea=function validarTarea(){dispatch({type:VALIDAR_TAREA});};var eliminarTarea=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id,proyecto){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return clienteAxios.delete(\"api/tareas/\".concat(id),{params:{proyecto:proyecto}});case 3:dispatch({type:ELIMINAR_TAREA,payload:id});_context3.next=9;break;case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return function eliminarTarea(_x3,_x4){return _ref3.apply(this,arguments);};}();// ///CAMBIA ESTADO DE TAREAS\n// const cambiaEstadoTarea = tarea => {\n//     dispatch({\n//         type: ESTADO_TAREA,\n//         payload: tarea\n//     })\n// }\nvar guardarTareaActual=function guardarTareaActual(tarea){dispatch({type:TAREA_ACTUAL,payload:tarea});};var actualizarTarea=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(tarea){var resultado;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return clienteAxios.put(\"/api/tareas/\".concat(tarea._id),tarea);case 3:resultado=_context4.sent;dispatch({type:ACTUALIZAR_TAREA,payload:resultado.data.tarea});_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function actualizarTarea(_x5){return _ref4.apply(this,arguments);};}();var limpiarTarea=function limpiarTarea(){dispatch({type:LIMPIAR_TAREA});};return/*#__PURE__*/React.createElement(TareaContext.Provider,{value:{// tareas:state.tareas,\ntareasproyecto:state.tareasproyecto,errortarea:state.errortarea,tareaseleccionada:state.tareaseleccionada,obtenerTareas:obtenerTareas,agregarTarea:agregarTarea,validarTarea:validarTarea,eliminarTarea:eliminarTarea,// cambiaEstadoTarea,\nguardarTareaActual:guardarTareaActual,actualizarTarea:actualizarTarea,limpiarTarea:limpiarTarea}},props.children);};export default TareaState;","map":{"version":3,"sources":["/home/sisagricola/Documents/Software/AdmTareas/mern/FrontEnd/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","clienteAxios","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","TareaState","props","initialState","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","proyecto","array_tareas","get","params","resultado","data","tareas","map","e","undefined","push","type","payload","agregarTarea","tarea","post","console","log","validarTarea","eliminarTarea","id","delete","guardarTareaActual","actualizarTarea","put","_id","limpiarTarea","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport clienteAxios from '../../config/axios';\n\n// import uuid from 'uuid/v4';\nimport {\n    TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA\n} from '../../types';\n\nconst TareaState = props => {\n\n    const initialState = {\n        // tareas:[\n        //     { nombre: \"Elegir plataforma\", id:1, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:2, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:3, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:4, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir plataforma\", id:5, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:6, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:7, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:8, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir plataforma\", id:9, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:10, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:11, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:12, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir Colores\", id:13, estado: false,proyectoId:3 },\n        // ],\n        tareasproyecto: [],\n        errortarea: false,\n        tareaseleccionada: null\n    }\n\n    //Crear dispatch y state\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n    const obtenerTareas = async proyecto => {\n\n        var array_tareas = [];\n\n        try {\n\n            const resultado = await clienteAxios.get(`/api/tareas`, { params: { proyecto } });\n\n            if (resultado) {\n\n                resultado.data.tareas.map(e => {\n\n                    if (e != undefined) {\n                        array_tareas.push(e);\n                    }\n                })\n            }\n\n            dispatch({\n                type: TAREAS_PROYECTO,\n                payload: array_tareas\n            })\n        } catch (error) {\n\n        }\n\n    }\n\n    // Agregar tarea al proyecto seleccionado\n    const agregarTarea = async tarea => {\n        // tarea.id=uuid();\n\n        try {\n\n            const resultado = await clienteAxios.post(`api/tareas`, tarea);\n\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload: resultado.data.tarea\n            });\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA\n        })\n    }\n\n    const eliminarTarea = async (id, proyecto) => {\n\n        try {\n\n            await clienteAxios.delete(`api/tareas/${id}`, { params: { proyecto } });\n\n            dispatch({\n                type: ELIMINAR_TAREA,\n                payload: id\n            })\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    // ///CAMBIA ESTADO DE TAREAS\n    // const cambiaEstadoTarea = tarea => {\n    //     dispatch({\n    //         type: ESTADO_TAREA,\n    //         payload: tarea\n    //     })\n    // }\n\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n\n    const actualizarTarea = async (tarea) => {\n\n        try {\n\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\n\n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea\n            });\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const limpiarTarea = () => {\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{\n                // tareas:state.tareas,\n                tareasproyecto: state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                obtenerTareas,\n                agregarTarea,\n                validarTarea,\n                eliminarTarea,\n                // cambiaEstadoTarea,\n                guardarTareaActual,\n                actualizarTarea,\n                limpiarTarea\n            }}>\n            {props.children}\n        </TareaContext.Provider>\n    )\n\n};\n\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}