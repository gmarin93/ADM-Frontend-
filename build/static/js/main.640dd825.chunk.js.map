{"version":3,"sources":["context/alertas/alertaContext.js","context/autentication/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","context/proyectos/proyectoReducer.js","types/index.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autentication/authReducer.js","config/token.js","context/autentication/authState.js","components/rutas/RutaPrivada.js","App.js","serviceWorker.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AuthContext","iniciarSesion","mensaje","autenticado","AlertaContext","alerta","mostrarAlerta","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","action","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","TareaContext","Proyecto","proyectoActual","obtenerTareas","tareaContext","_id","ListadoProyectos","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","key","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareaseleccionada","agregarTarea","validarTarea","errortarea","actualizarTarea","limpiarTarea","guardarTarea","tarea","estado","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","state","payload","filter","clienteAxios","axios","create","baseURL","process","REACT_APP_BACKEND_URL","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","delete","Provider","children","TareaState","TareaReducer","array_tareas","params","tareas","undefined","console","log","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.640dd825.chunk.js","sourcesContent":["import React,{createContext} from 'react';\n\nconst alertaContext = createContext();\n\nexport default alertaContext;","import React,{createContext} from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autentication/authContext';\n\n\nconst Login = props => {\n\n    const authContext = useContext(AuthContext);\n    const { iniciarSesion, mensaje, autenticado } = authContext;\n\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    useEffect(()=>{\n\n        if(autenticado){\n            props.history.push('/proyectos');\n        }\n\n        if(mensaje){\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        //eslint-disable-next-line\n\n    },[mensaje, autenticado, props.history])\n\n    const [usuario, guardarUsuario] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = usuario;\n\n    const onChange = (e) => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (email.trim() === '' || password.trim() === '') {\n\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n        }\n\n        iniciarSesion(usuario);\n\n    }\n\n    return (\n        <div className=\"form-usuario\">\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Iniciar Sesión</h1>\n\n                <form action=\"\" onSubmit={onSubmit}>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" name=\"email\" value={email} placeholder=\"Tu Email\" onChange={onChange} />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" value={password} name=\"password\" placeholder=\"Tu Pasword\" onChange={onChange} />\n                    </div>\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Iniciar Sesión\" />\n                    </div>\n                </form>\n                <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">\n                    Obtener Cuenta\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nLogin.propTypes = {\n\n};\n\nexport default Login;","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autentication/authContext';\n\n\nconst NuevaCuenta = props => {\n\n    const authContext = useContext(AuthContext);\n    const {registrarUsuario, mensaje, autenticado} = authContext;\n\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    useEffect(()=>{\n\n        if(autenticado){\n            props.history.push('/proyectos');\n        }\n\n        if(mensaje){\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n\n        //eslint-disable-next-line\n\n    },[mensaje, autenticado, props.history])\n\n    const [usuario, guardarUsuario] = useState({\n        nombre: '',\n        email: '',\n        password: '',\n        confirmar: ''\n    });\n\n    const { nombre, email, password, confirmar } = usuario;\n\n    const onChange = (e) => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n    \n        e.preventDefault();\n\n        if (nombre.trim() === \"\" ||\n            email.trim() === \"\" ||\n            password.trim() === \"\" ||\n            confirmar.trim() === \"\") {\n\n            mostrarAlerta('Todos los campos son obligatorios','alerta-error');\n            return;\n        }\n\n        if(password.length<6){\n            mostrarAlerta('El password debe ser de al menos 6 caracteres','alerta-error');\n            return;\n        }\n\n        if(password != confirmar){\n            mostrarAlerta('Las contrañas no son iguales','alerta-error');\n            return;\n        }\n\n        registrarUsuario({\n            nombre,\n            email,\n            password\n        });\n\n    }\n\n    return (\n        <div className=\"form-usuario\">\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Crear una cuenta</h1>\n\n                <form onSubmit={onSubmit}>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"nombre\">Nombre</label>\n                        <input type=\"text\" id=\"nombre\" value={nombre} name=\"nombre\" placeholder=\"Tu Nombre\" onChange={onChange} />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" name=\"email\" value={email} placeholder=\"Tu Email\" onChange={onChange} />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" value={password} name=\"password\" placeholder=\"Tu Pasword\" onChange={onChange} />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"confirmar\">Confirmar Password</label>\n                        <input type=\"password\" id=\"confirmar\" value={confirmar} name=\"confirmar\" placeholder=\"Repite tu Password\" onChange={onChange} />\n                    </div>\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Registrar\" />\n                    </div>\n                </form>\n                <Link to={'/'} className=\"enlace-cuenta\">\n                    Volver a Iniciar Sesión\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nNuevaCuenta.propTypes = {\n\n};\n\nexport default NuevaCuenta;","import React,{createContext} from 'react';\n\nconst proyectoContext = createContext();\n\nexport default proyectoContext; ","import React, { Fragment, useState, useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext'\n\n\nconst NuevoProyecto = () => {\n\n    const proyectosContext = useContext(proyectoContext);\n    const { formulario,errorformulario,mostrarFormulario,agregarProyecto,mostrarError } = proyectosContext;\n\n    const [proyecto, guardarProyecto] = useState({\n        nombre: ''\n    });\n\n    const onChangeProyecto = e => {\n        guardarProyecto({\n            ...proyecto,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const { nombre } = proyecto\n\n    const onSubmitProyecto = e => {\n        e.preventDefault();\n\n        if(nombre===''){\n            mostrarError();\n            return;\n        } \n            \n\n        agregarProyecto(proyecto);\n        guardarProyecto('');\n    }\n\n\n    return (\n        <Fragment>\n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={()=>mostrarFormulario()}\n            >Nuevo Proyecto</button>\n\n            {\n                formulario ?\n                    (\n                        <form className=\"formulario-nuevo-proyecto\" onSubmit={onSubmitProyecto} >\n                            <input type=\"text\" className=\"input-text\" placeholder=\"Nombre del proyecto\"\n                                name=\"nombre\" id=\"\" onChange={onChangeProyecto} value={nombre} />\n                            <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Agregar Proyecto\" />\n                        </form>\n                    )\n                    : null\n            }\n\n            {errorformulario ? <p className=\"mensaje error\">El nombre del proyecto es obligatorio</p> : null}\n        </Fragment>\n    );\n};\n\nNuevoProyecto.propTypes = {\n\n};\n\nexport default NuevoProyecto;","import React,{createContext} from 'react';\n\nconst TareaContext=createContext();\n\nexport default TareaContext;","import React,{useContext} from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst Proyecto = ({ proyecto }) => {\n\n    const proyectosContext = useContext(proyectoContext);\n    const { proyectoActual } = proyectosContext;\n\n    const {obtenerTareas}=useContext(tareaContext);\n\n    const seleccionarProyecto=id=>{\n        // Fijar un  proyecto\n        proyectoActual(id);\n        //Filtra las tareas al dar click\n        obtenerTareas(id);\n    }\n\n    return (\n        <li>\n            <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={()=>seleccionarProyecto(proyecto._id)}\n            >{proyecto.nombre}</button>\n        </li>\n    );\n};\n\n\nexport default Proyecto;","import React, { useContext, useEffect } from 'react';\nimport Proyecto from './Proyecto';\nimport proyectoContext from '../../context/proyectos/proyectoContext'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport AlertaContext from '../../context/alertas/alertaContext';\n\n\n\nconst ListadoProyectos = () => {\n\n    const { proyectos, obtenerProyectos, mensaje } = useContext(proyectoContext);\n\n    const alertaContext = useContext(AlertaContext);\n    const {alerta, mostrarAlerta} = alertaContext;\n\n    useEffect(() => {\n\n        if(mensaje){\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n\n        obtenerProyectos();\n        //eslint-disable-next-line\n    }, [mensaje])\n\n    if (proyectos.length === 0) return <p>No hay proyectos, comienza creando uno</p>; //Nunca debe haber un return antes de useffect\n\n    return (\n        <ul className=\"listado-proyectos\">\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\n            <TransitionGroup>\n                {proyectos.map(e => (\n                    <CSSTransition\n                        key={e._id}\n                        timeout={200}\n                        classNames=\"proyecto\">\n                        <Proyecto\n                            key={e.id}\n                            proyecto={e}\n                        />\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n        </ul>\n    );\n};\n\nexport default ListadoProyectos;","import React from 'react';\nimport NuevoProyecto from '../proyectos/NuevoProyecto'\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\n\n\nconst Sidebar = () => {\n    return (\n        <aside>\n            <h1>La Lydia <span>Tareas</span></h1>\n            <NuevoProyecto />\n            <div className=\"proyectos\">\n                <h2>Tus proyectos</h2>\n                <ListadoProyectos/> \n            </div>\n        </aside>\n    );\n};\n\nSidebar.propTypes = {\n\n};\n\nexport default Sidebar;","import React,{useContext,useEffect} from 'react';\nimport AuthContext from '../../context/autentication/authContext';\n\n\nconst Barra = props => {\n\n    const authContext = useContext(AuthContext);\n    const {usuario,usuarioAutenticado,cerrarSesion} = authContext;\n\n    useEffect(()=>{\n        usuarioAutenticado();\n        //eslint-disable-next-line\n    },[]);\n\n    return (\n       <header className=\"app-header\">\n           {usuario ? (<p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span></p>) : null}\n           <nav className=\"nav-principal\">\n               <button\n               className=\"btn btn-blank cerrar-sesion\"\n               onClick={()=>cerrarSesion()}\n               >Cerrar Sesion</button>\n           </nav>\n       </header>\n    );\n};\n\nBarra.propTypes = {\n    \n};\n\nexport default Barra;","import React,{useContext,useState, useEffect} from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst FormTarea = props => {\n\n    const { proyecto } = useContext(proyectoContext);//Se obtienen datos del context de proyectos\n    const {tareaseleccionada,agregarTarea,validarTarea,errortarea,obtenerTareas,actualizarTarea,limpiarTarea}=useContext(tareaContext);// Se obtienen datos del context de tareas\n  \n\n    useEffect(()=>{\n\n        if(tareaseleccionada!=null){\n            guardarTarea(tareaseleccionada);\n        }\n        else{\n            guardarTarea({\n                nombre:''\n            })\n        }\n    },[tareaseleccionada]);\n    \n    const [tarea,guardarTarea]=useState({\n        nombre:''\n    })\n\n    if(!proyecto) return null\n  \n    // Array destructuring que extrae el proyecto actual\n    const [proyectoActual]= proyecto;\n  \n    const handleChange=e=>{\n        guardarTarea({\n            ...tarea,\n            [e.target.name]: e.target.value\n        })\n    }\n    const {nombre}= tarea;\n\n    const onSubmit=e=>{\n        e.preventDefault();\n\n        if(nombre.trim()===''){\n            validarTarea();\n            return;\n        }\n\n            if(tareaseleccionada==null){\n\n                tarea.proyecto=proyectoActual._id;\n                tarea.estado=false;\n                agregarTarea(tarea);\n            }\n            else{\n                actualizarTarea(tarea);\n                limpiarTarea();\n            }\n\n\n        //Tareas del proyecto actual\n        obtenerTareas(proyectoActual._id);\n\n        guardarTarea({\n            nombre:''\n        })\n\n    }\n\n    return (\n        <div className=\"formulario\">\n            <form onSubmit={\n                onSubmit\n            }>\n                <div className=\"contener-input\">\n                    <input type=\"text\" className=\"input-text\" placeholder=\"Nombre Tarea..\" name=\"nombre\" onChange={handleChange} value={nombre}/>\n                </div>\n                <div className=\"contener-input\">\n                    <input type=\"submit\" className=\"btn btn-primario btn-block\" value={tareaseleccionada ? `Editar Tarea` : `Nueva Tarea`}/>\n                </div>\n            </form>\n\n            {errortarea ? <p className=\"mensaje error\">Espacios en blanco</p> : null}\n        </div>\n    );  \n};\n\nFormTarea.propTypes = {\n\n};\n\nexport default FormTarea;","import React, { useContext } from 'react';\nimport TareaContext from '../../context/tareas/tareaContext';\nimport proyectosContext from '../../context/proyectos/proyectoContext';\n\nconst Tarea = ({ tarea }) => {\n\n    const { proyecto } = useContext(proyectosContext);\n    const { eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual } = useContext(TareaContext);// Se obtienen datos del context de tareas\n\n    const [proyectoActual] = proyecto;\n\n    const tareaEliminar = id => {\n        eliminarTarea(id, proyectoActual._id);\n        obtenerTareas(proyectoActual._id);\n    }\n\n    const cambiarEstado = tarea => {\n\n        if (tarea.estado) {\n            tarea.estado = false\n        }\n        else {\n            tarea.estado = true\n        }\n\n        actualizarTarea(tarea);\n    }\n\n    const seleccionarTarea = tarea => {\n        guardarTareaActual(tarea);\n    }\n\n    return (\n        <li className=\"tarea sombra\">\n            <p>{tarea.nombre}</p>\n            <div className=\"estado\">\n                {tarea.estado ? (\n                    <button\n                        type=\"button\"\n                        className=\"completo\"\n                        onClick={() => { cambiarEstado(tarea) }}\n                    >Completo</button>\n                )\n                    : (<button\n                        type=\"button\"\n                        className=\"incompleto\"\n                        onClick={() => { cambiarEstado(tarea) }}\n                    >Incompleto</button>)\n                }\n            </div>\n\n            <div className=\"acciones\">\n                <button type=\"button\" className=\"btn btn-primario\" onClick={() => seleccionarTarea(tarea)}>Editar</button>\n                <button type=\"button\" className=\"btn btn-secundario\" onClick={() => tareaEliminar(tarea._id)}>Eliminar</button>\n            </div>\n        </li>\n    );\n};\n\nTarea.propTypes = {\n\n};\n\nexport default Tarea;","import React, { Fragment, useContext } from 'react';\nimport Tarea from './Tarea';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\n\nconst ListadoTareas = () => {\n\n    // Tipos de destructuring\n\n    // 1(De una función en parámetros {})\n    // 2(De un arreglo [])\n\n    const { proyecto, eliminarProyecto } = useContext(proyectoContext);\n    const { tareasproyecto } = useContext(tareaContext);\n\n    if (!proyecto) return <h2>Selecciona un proyecto</h2>\n\n    const [proyectoActual] = proyecto; //Array destructuring\n\n    const onClickEliminar = () => {\n        eliminarProyecto(proyectoActual._id);\n    }\n\n    return (\n        <Fragment>\n            <h2>Proyecto: {proyectoActual.nombre}</h2>\n            <ul className=\"listado-tareas\">\n                {tareasproyecto.length === 0 ? (<li className=\"tarea\"><p> No hay tareas </p></li>)\n                    :\n                    <TransitionGroup>\n                        {\n                            tareasproyecto.map(tarea => {\n\n                                if (tarea) {\n                                    return (\n                                        <CSSTransition\n                                            key={`${tarea._id}`}\n                                            timeout={200}\n                                            classNames=\"tarea\">\n                                            <Tarea\n                                                key={tarea._id}\n                                                tarea={tarea} />\n                                        </CSSTransition>\n                                    )\n                                }\n                            })\n                        }\n                    </TransitionGroup>\n                }\n            </ul>\n            <button className=\"btn btn-eliminar\" type=\"button\" onClick={onClickEliminar}>Eliminar Proyecto &times;</button>\n        </Fragment>\n    );\n};\n\nexport default ListadoTareas;","import React,{useContext, useEffect} from 'react';\nimport Sidebar from '../layout/Sidebar';\nimport Barra from '../layout/Barra';\nimport FormTarea from '../tareas/FormTarea';\nimport ListadoTareas from '../tareas/ListadoTareas';\nimport AuthContext from '../../context/autentication/authContext';\n\nconst Proyectos = () => {\n\n    const authContext = useContext(AuthContext);\n    const {usuarioAutenticado} = authContext;\n\n    useEffect(()=>{\n        usuarioAutenticado();\n        //eslint-disable-next-line\n    },[]);\n\n    return (\n        <div className=\"contenedor-app\">\n            <Sidebar />\n            <div className=\"seccion-principal\">\n                <Barra />\n                <main>\n                    <FormTarea />\n                    <div className=\"contenedor-tareas\">\n                        <ListadoTareas/ >\n                    </div>\n                </main>\n            </div>\n        </div>\n    );\n};\n\nexport default Proyectos;","import {FORMULARIO_PROYECTO,OBTENER_PROYECTOS,AGREGAR_PROYECTO,VALIDAR_FORMULARIO,PROYECTO_ACTUAL,ELIMINAR_PROYECTO,PROYECTO_ERROR} from '../../types';\n\nexport default (state,action)=>{\n    switch(action.type){\n\n        case FORMULARIO_PROYECTO:\n            return{\n                ...state,\n                formulario:true\n            }\n        case OBTENER_PROYECTOS:\n            return{\n                ...state,\n                proyectos:action.payload\n            }\n        case AGREGAR_PROYECTO:\n            return{\n                ...state,\n                proyectos:[...state.proyectos,action.payload],\n                formulario:false,\n                errorformulario:false\n            }\n        case VALIDAR_FORMULARIO:\n            return{\n                ...state,\n                errorformulario:true\n            }\n        case PROYECTO_ACTUAL:\n            return{\n                ...state,\n                proyecto:state.proyectos.filter(proyecto=>proyecto._id===action.payload)\n            }\n        case ELIMINAR_PROYECTO:\n            return{\n                ...state,\n                proyectos:state.proyectos.filter(proyecto=>proyecto._id!==action.payload),\n                proyecto:null\n            }\n        case PROYECTO_ERROR:\n            return{\n                ...state,\n                mensaje: action.payload\n            }\n\n        default:\n            return state;\n    }\n}","export const FORMULARIO_PROYECTO='FORMULARIO_PROYECTO';\nexport const OBTENER_PROYECTOS='OBTENER_PROYECTOS';\nexport const AGREGAR_PROYECTO='AGREGAR_PROYECTO';\nexport const VALIDAR_FORMULARIO='VALIDAR_FORMULARIO';\nexport const PROYECTO_ACTUAL='PROYECTO_ACTUAL';\nexport const ELIMINAR_PROYECTO='ELIMINAR_PROYECTO';\nexport const PROYECTO_ERROR ='PROYECTO_ERROR';\n\n\nexport const TAREAS_PROYECTO='TAREAS_PROYECTO';\nexport const AGREGAR_TAREA='AGREGAR_TAREA';\nexport const VALIDAR_TAREA= 'VALIDAR_TAREA';\nexport const ELIMINAR_TAREA= 'ELIMINAR_TAREA';\nexport const TAREA_ACTUAL= 'TAREA_ACTUAL';\nexport const ACTUALIZAR_TAREA= 'ACTUALIZAR_TAREA';\nexport const LIMPIAR_TAREA= 'LIMPIAR_TAREA';\n\nexport const MOSTRAR_ALERTA= 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA= 'OCULTAR_ALERTA';\n\nexport const REGISTRO_EXITOSO= 'REGISTRO_EXITOSO';\nexport const REGISTRO_ERROR= 'REGISTRO_ERROR';\nexport const OBTENER_USUARIO= 'OBTENER_USUARIO';\nexport const LOGIN_EXITOSO= 'LOGIN_EXITOSO';\nexport const LOGIN_ERROR= 'LOGIN_ERROR';\nexport const CERRAR_SESION= 'CERRAR_SESION';\n","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL : process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios;","import React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\n// import uuid from 'uuid/v4';\nimport clienteAxios from '../../config/axios';\n\nimport {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    PROYECTO_ERROR,\n    ELIMINAR_PROYECTO\n} from '../../types';\n\n// El archivo dentro de types al llamarse index.js no necesita llamarse types/index.js, así como está funciona\n\nconst ProyectoState = props => {\n\n    // const proyectos = [\n    //     { id: 1, nombre: 'Tienda Virtual' },\n    //     { id: 2, nombre: 'Intranet' },\n    //     { id: 3, nombre: 'Diseño de sitio' },\n    //     { id: 4, nombre: 'MERN' }\n    // ]\n\n    const initialState = {\n        formulario: false,\n        proyectos: [],\n        errorformulario: false,\n        proyecto: null,\n        mensaje:null\n    }\n\n    const [state, dispatch] = useReducer(proyectoReducer, initialState);\n\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    const obtenerProyectos = async () => {\n\n        try {\n            \n            const resultado = await clienteAxios.get(`api/proyectos`);\n\n            dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n            });\n\n\n        } catch (error) {\n           \n            const alerta = {\n                msg: `Hubo un error`,\n                categoria: `alerta-error`\n            };\n            \n            dispatch({\n                type:PROYECTO_ERROR,\n                payload:alerta\n            });\n        }\n    }\n\n    const agregarProyecto = async proyecto => {\n        // proyecto.id=uuid();\n\n        try {\n\n            const resultado = await clienteAxios.post('api/proyectos', proyecto);\n\n            dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: resultado.data\n            })\n\n        } catch (error) {\n\n            const alerta = {\n                msg: `Hubo un error`,\n                categoria: `alerta-error`\n            };\n            \n            dispatch({\n                type:PROYECTO_ERROR,\n                payload:alerta\n            })\n        }\n\n    }\n\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n    const proyectoActual = id => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: id\n        })\n    }\n\n    const eliminarProyecto = async id => {\n\n        try {\n\n            await clienteAxios.delete(`/api/proyectos/${id}`);\n            \n            dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload: id\n            });\n\n        } catch (error) {\n\n            const alerta = {\n                msg: `Hubo un error`,\n                categoria: `alerta-error`\n            };\n            \n            dispatch({\n                type:PROYECTO_ERROR,\n                payload:alerta\n            })\n        }\n\n    }\n\n    // Es recomendable manejar los datos del state y luego las funciones en el value del context\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorformulario: state.errorformulario,\n                proyecto: state.proyecto,\n                mensaje: state.mensaje,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    );\n};\n\n\nexport default ProyectoState;","import {TAREAS_PROYECTO,AGREGAR_TAREA,VALIDAR_TAREA, ELIMINAR_TAREA,TAREA_ACTUAL,ACTUALIZAR_TAREA,LIMPIAR_TAREA\n} from '../../types';\n\n\nexport default (state,action)=>{\n\n    switch(action.type){\n\n        case TAREAS_PROYECTO:\n            return{\n                ...state,\n                // tareasproyecto:state.tareasproyecto.filter(tarea=>tarea.proyectoId===action.payload)\n                tareasproyecto:action.payload\n\n            }\n        case AGREGAR_TAREA:\n            return{\n                ...state,\n                tareasproyecto:[,action.payload,...state.tareasproyecto],\n                errortarea:false\n            }\n        case ELIMINAR_TAREA:\n            return{\n                ...state,\n                tareasproyecto:state.tareasproyecto.filter(tarea=>tarea._id!==action.payload)\n            }\n        case VALIDAR_TAREA:\n            return{\n                ...state,\n                errortarea:true\n            }\n        case ACTUALIZAR_TAREA:\n            return{\n                ...state,\n                tareasproyecto:state.tareasproyecto.map(tarea=>tarea._id===action.payload._id ? action.payload : tarea ),\n                // tareaseleccionada:null\n            }\n    \n        case TAREA_ACTUAL:\n            return{\n                ...state,\n                tareaseleccionada:action.payload\n            }\n        case LIMPIAR_TAREA:\n            return{\n                ...state,\n                tareaseleccionada:null\n            }\n        default:    \n            return state;\n    }\n\n}","import React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport clienteAxios from '../../config/axios';\n\n// import uuid from 'uuid/v4';\nimport {\n    TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA\n} from '../../types';\n\nconst TareaState = props => {\n\n    const initialState = {\n        // tareas:[\n        //     { nombre: \"Elegir plataforma\", id:1, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:2, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:3, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:4, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir plataforma\", id:5, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:6, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:7, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:8, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir plataforma\", id:9, estado: true,proyectoId:1 },\n        //     { nombre: \"Elegir Colores\", id:10, estado: false,proyectoId:2 },\n        //     { nombre: \"Elegir plataforma de pago\", id:11, estado: false,proyectoId:3 },\n        //     { nombre: \"Elegir hosting\", id:12, estado: true,proyectoId:4 },\n        //     { nombre: \"Elegir Colores\", id:13, estado: false,proyectoId:3 },\n        // ],\n        tareasproyecto: [],\n        errortarea: false,\n        tareaseleccionada: null\n    }\n\n    //Crear dispatch y state\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n    const obtenerTareas = async proyecto => {\n\n        var array_tareas = [];\n\n        try {\n\n            const resultado = await clienteAxios.get(`/api/tareas`, { params: { proyecto } });\n\n            if (resultado) {\n\n                resultado.data.tareas.map(e => {\n\n                    if (e != undefined) {\n                        array_tareas.push(e);\n                    }\n                })\n            }\n\n            dispatch({\n                type: TAREAS_PROYECTO,\n                payload: array_tareas\n            })\n        } catch (error) {\n\n        }\n\n    }\n\n    // Agregar tarea al proyecto seleccionado\n    const agregarTarea = async tarea => {\n        // tarea.id=uuid();\n\n        try {\n\n            const resultado = await clienteAxios.post(`api/tareas`, tarea);\n\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload: resultado.data.tarea\n            });\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA\n        })\n    }\n\n    const eliminarTarea = async (id, proyecto) => {\n\n        try {\n\n            await clienteAxios.delete(`api/tareas/${id}`, { params: { proyecto } });\n\n            dispatch({\n                type: ELIMINAR_TAREA,\n                payload: id\n            })\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    // ///CAMBIA ESTADO DE TAREAS\n    // const cambiaEstadoTarea = tarea => {\n    //     dispatch({\n    //         type: ESTADO_TAREA,\n    //         payload: tarea\n    //     })\n    // }\n\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n\n    const actualizarTarea = async (tarea) => {\n\n        try {\n\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\n\n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea\n            });\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const limpiarTarea = () => {\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{\n                // tareas:state.tareas,\n                tareasproyecto: state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                obtenerTareas,\n                agregarTarea,\n                validarTarea,\n                eliminarTarea,\n                // cambiaEstadoTarea,\n                guardarTareaActual,\n                actualizarTarea,\n                limpiarTarea\n            }}>\n            {props.children}\n        </TareaContext.Provider>\n    )\n\n};\n\n\nexport default TareaState;","import {OCULTAR_ALERTA,MOSTRAR_ALERTA} from '../../types'\n\n\nexport default (state,action) => {\n\n    switch(action.type){\n\n        case MOSTRAR_ALERTA:\n            return{\n                alerta: action.payload\n            };\n\n        case OCULTAR_ALERTA:\n            return{\n                alerta: null\n            }\n\n        default:\n            return state;\n    }\n\n}","import React, { useReducer } from 'react';\nimport alertaReducer from './alertaReducer';\nimport alertaContext from './alertaContext';\nimport { OCULTAR_ALERTA, MOSTRAR_ALERTA } from '../../types';\n\n\nconst AlertaState = props => {\n\n    const initialState = {\n        alerta: null\n    };\n\n    const [state, dispatch] = useReducer(alertaReducer, initialState);\n\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: {\n                msg,\n                categoria\n            }\n        });\n\n        setTimeout(() => {\n            dispatch({ type: OCULTAR_ALERTA })\n        }, 5000);\n    }\n\n    return (\n        <alertaContext.Provider\n            value={{\n\n                alerta: state.alerta,\n                mostrarAlerta\n            }}\n        >\n            {props.children}\n        </alertaContext.Provider>\n    )\n\n};\n\nexport default AlertaState;","import { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from '../../types'\n\n\nexport default (state, action) => {\n\n    switch (action.type) {\n\n        case LOGIN_EXITOSO:\n        case REGISTRO_EXITOSO:\n                localStorage.setItem('token', action.payload.token);\n                \n                return{\n                    ...state,\n                    autenticado:true,\n                    mensaje:null,\n                    cargando:false\n                }\n        case CERRAR_SESION:\n        case LOGIN_ERROR:\n        case REGISTRO_ERROR:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                usuario:null,\n                autenticado:null,\n                mensaje:action.payload,\n                cargando:false\n            }\n            \n        case OBTENER_USUARIO:\n            return {\n                ...state,\n                autenticado:true,\n                usuario: action.payload,\n                cargando:false\n            }\n\n        default:\n            return state;\n    }\n\n}","import clienteAxios from './axios';\n\nconst tokenAuth = token => {\n\n    if(token){\n\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\n    }\n    else{\n\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\n    }\n};\n\nexport default tokenAuth;","import React, { useReducer } from 'react';\nimport AuthReducer from './authReducer';\nimport AuthContext from './authContext';\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/token';\n\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from '../../types'\n\n\nconst AuthState = props => {\n\n    const initialState = {\n        token: localStorage.getItem(`token`),\n        autenticado: null,\n        usuario: null,\n        mensaje:null,\n        cargando: true\n    };\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    const registrarUsuario = async datos =>{\n\n        try {\n\n            const respuesta = await clienteAxios.post(`/api/usuarios`,datos);\n            console.log(respuesta);\n\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload:respuesta.data\n            });\n\n            usuarioAutenticado();\n            \n        } catch (error) {\n            console.log(error.response.data.msg);\n\n            const alerta={\n                msg:error.response.data.msg,\n                categoria: `alerta-error`   \n            }\n\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload:alerta\n            });\n        }\n    }\n\n    const usuarioAutenticado = async () => {\n\n        const token = localStorage.getItem('token');\n\n        if(token){\n            tokenAuth(token);\n        }\n\n        try {\n\n            const respuesta = await clienteAxios.get('api/auth');\n            \n            dispatch({\n                type: OBTENER_USUARIO,\n                payload:respuesta.data.usuario\n            });\n            \n        } catch (error) {\n            console.log(error.response);\n            dispatch({\n                type: LOGIN_ERROR\n            });\n        }\n    }\n\n    const iniciarSesion = async datos => {\n\n        try {\n            \n            const respuesta = await clienteAxios.post('/api/auth', datos);\n\n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            });\n\n            usuarioAutenticado();\n            \n            console.log(respuesta);\n            \n        } catch (error) {\n            \n            console.log(error);\n            \n            const alerta={\n                msg:error.response.data.msg,\n                categoria: `alerta-error`   \n            }\n\n            dispatch({\n                type: LOGIN_ERROR,\n                payload:alerta\n            });\n            \n        }\n    }\n\n    const cerrarSesion = () =>{\n\n        dispatch({\n            type: CERRAR_SESION\n        });\n    }\n\n    return (\n        <AuthContext.Provider\n\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                registrarUsuario,\n                iniciarSesion,\n                usuarioAutenticado,\n                cerrarSesion\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState;","import React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/autentication/authContext';\n\nconst RutaPrivada = ({ component: Component, ...props }) => {\n\n//TOma un componente dentro de el, asi para proteger el componente en caso de que no este logueado\n//Higher order component\n\n    const authContext = useContext(AuthContext);\n    const { autenticado,usuarioAutenticado,cargando } = authContext;\n\n    //para mantener la sesion si se refresca la pagina\n    useEffect(()=>{\n        usuarioAutenticado();\n        //eslint-disable-next-line\n    },[]);\n\n    return (\n        <Route\n            {...props} render={props => !autenticado && !cargando ? (\n            <Redirect to=\"/\" />\n            ) : (\n            <Component {...props} />\n            )}/>\n    );\n};\n\nexport default RutaPrivada;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\nimport ProyectoState from './context/proyectos/proyectoState';\nimport TareaState from './context/tareas/tareaState';\nimport AlertasState from './context/alertas/alertaState';\nimport AuthState from './context/autentication/authState';\nimport tokenAuth from './config/token';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n//Revisar si hay token\nconst token = localStorage.getItem('token');\n\nif(token){\n  tokenAuth(token);\n}\n\n//Se cambia el high order component por el Route de React\n /* <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                <Route exact path=\"/proyectos\" component={Proyectos} />*/\n\nfunction App() {\n\n  return (\n    <ProyectoState>\n        <TareaState>\n          <AlertasState>\n      <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n              </Switch>\n            </Router>\n      </AuthState>\n          </AlertasState>\n        </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}